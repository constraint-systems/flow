{"version":3,"sources":["Scene.js","State.js","Utils.js","Actions.js","Keyboard.js","Pointer.js","Menu.js","Status.js","Shortcuts.js","FlowControl.js","Pan.js","App.js","reportWebVitals.js","index.js"],"names":["Scene","aWindowSize","atom","key","default","sSetWindowSize","selector","set","console","log","window","innerWidth","innerHeight","aCanvas","aPadding","aImage","Image","aZoom","sAdjustZoom","get","diff","zoom","aCell","aCursor","sCursorLimited","cursor","newCursor","grid","Math","min","cols","rows","limitCursor","sGrid","sImageCursor","image","cell","x","max","y","w","h","xoff","yoff","x1","width","y1","height","sVisibleCursor","padding","collected","map","v","sCursorOverlap","sMoveCursorBy","moveBy","shift","slice","getCR","pixel","round","sPlaceCursorPixel","clickX","clickY","aDragResizeStart","sSetDragResizeStart","cr","sSetCornerResizeStart","pinCorner","sResizeBy","aCursorMoveStart","sSetCursorMoveStart","sCursorMoveDrag","moveCursorStart","diffx","diffy","sDragResize","dragStart","cx","cy","cx1","cy1","cw","abs","ch","sImageBounds","x2","y2","ceil","sRenderSize","aMode","aFlows","sAddFlow","dir","flows","imageCursor","push","aFlow","sToggleFlow","flow","aShowGrid","sToggleGrid","showGrid","aShowFlow","sToggleShowFlow","showFlow","aButtonSize","matchMedia","matches","aShowImageMenu","o","aShowViewMenu","aShowGridMenu","aCursorColor","sZoomLevels","buttonSize","showShortcuts","aShowShortcuts","ratio","levels","sort","sZoomIn","zoomLevels","closest","reduce","prev","curr","newIndex","indexOf","length","sZoomOut","sModifyCell","modifications","i","parseInt","sShortcutPadding","windowWidth","renderWidth","p","sToggleShortcuts","shortcuts","aShowAbout","about","eq","c1","c2","loadImage","src","Promise","resolve","reject","onload","domLoadImage","callback","input","document","querySelector","handleChange","e","a","this","files","item","type","URL","createObjectURL","removeEventListener","addEventListener","dispatchEvent","MouseEvent","bubbles","cancelable","view","saveImage","c","createElement","link","ic","layersRef","current","imageLayer","getContext","drawImage","toBlob","blob","setAttribute","Date","getTime","preventDefault","stopPropagation","clipboardData","items","file","getAsFile","dataTransfer","onDrag","dropEffect","Keyboard","kmRef","useRef","moveCursorBy","useSetRecoilState","useRecoilState","mode","setMode","setShowAbout","addFlow","toggleFlow","toggleShowFlow","toggleGrid","resizeBy","setImage","setFlows","zoomIn","zoomOut","setShowGridMenu","toggleShortcuts","useEffect","km","press","originalImage","arrowleft","arrowright","l","arrowup","k","arrowdown","j","shiftKey","downHandler","toLowerCase","pressed","upHandler","Pointer","canvas","useRecoilValue","container","parentElement","placeCursorPixel","setDragResizeStart","setCursorMoveStart","dragCursor","dragResize","pointerRef","primary","down","secondary","clickWindow","oneDrag","twoDrag","cursorDrag","ignore","dropLoader","onDrop","pasteLoader","onPaste","pointer","scrollContainer","getXY","bounds","getBoundingClientRect","clientX","left","clientY","top","boundPosition","position","pointerDown","target","classList","contains","isPrimary","cp","visibleCursor","checkCursorPixel","setPointerCapture","pointerId","pointerMove","dx","dy","scrollBy","pointerUp","releasePointerCapture","RepeatButton","children","click","style","intervalId","repeat","role","className","onPointerDown","clearInterval","setTimeout","setInterval","onPointerUp","textAlign","minWidth","Option","onClick","display","justifyContent","borderBottom","alignItems","Box","lineHeight","NumberInput","val","setVal","modifyVal","Fragment","flexGrow","value","onChange","Menu","setState","right","bottom","paddingTop","background","border","MenuItem","name","state","userSelect","MenuBar","showImageMenu","setShowImageMenu","showViewMenu","setShowViewMenu","showAbout","size","setCell","modifyCell","showGridMenu","cursorColor","setCursorColor","setFlow","clearAndSet","zIndex","bind","paddingLeft","flexShrink","newCell","mod","href","rel","Button","StatusBar","borderTop","color","Entry","paddingBottom","paddingRight","KeyEntry","char","outline","marginRight","Shortcuts","setShowShortcuts","bg","borderLeft","overflow","FlowControl","renderSize","setCornerResizeStart","resizeRef","rsize","rdisplay","startResize","resize","endResize","fx","fy","fbw","fbh","afx","afy","roff","fontSize","onPointerMove","pointerEvents","Pan","panRef","positionRef","downRef","shortcutPadding","barHeight","availableHeight","panEl","panCanvas","showButton","ref","marginTop","marginLeft","borderRadius","touchAction","App","setWindowSize","id","Body","Canvas","Status","renderRef","setCanvas","margin","CanvasBody","Shadow","windowSize","Render","compose","layers","clearRect","flowsLayer","globalAlpha","gridLayer","cursorLayer","setZoom","OffscreenCanvas","scratchLayer","flowRef","init","im","imx","flowbox","ImageLayer","GridLayer","CursorLayer","FlowsLayer","strokeStyle","lineWidth","strokeRect","imageBounds","beginPath","moveTo","lineTo","stroke","r","cursorOverlap","ol","ot","or","ob","Wrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.18d1aae8.chunk.js","sourcesContent":["const Scene = {};\n\nexport default Scene;\n","import { atom, atomFamily, selector } from \"recoil\";\nimport Scene from \"./Scene\";\n\nexport let aWindowSize = atom({\n  key: \"windowSize\",\n  default: [null, null],\n});\n\nexport let sSetWindowSize = selector({\n  key: \"setWindowSize\",\n  set: ({ set }) => {\n    console.log(\"set window size\");\n    set(aWindowSize, [window.innerWidth, window.innerHeight]);\n  },\n});\n\nexport let aCanvas = atom({\n  key: \"canvas\",\n  default: null,\n});\n\nexport let aPadding = atom({\n  key: \"padding\",\n  default: 8,\n});\n\nexport let aImage = atom({\n  key: \"image\",\n  default: new Image(10, 10),\n});\n\nexport let aZoom = atom({\n  key: \"zoom\",\n  default: 1,\n});\n\nexport let sAdjustZoom = selector({\n  key: \"adjustZoom\",\n  set: ({ get, set }, { diff }) => {\n    let zoom = get(aZoom);\n    set(aZoom, zoom + diff);\n  },\n});\n\nexport let aCell = atom({\n  key: \"cell\",\n  default: [0, 0, 32, 32],\n});\n\nexport let aCursor = atom({\n  key: \"cursor\",\n  default: [2, 8, 14, 12],\n});\n\nexport let sCursorLimited = selector({\n  key: \"cursorLimited\",\n  set: ({ get, set }, cursor) => {\n    let grid = get(sGrid);\n    let newCursor = limitCursor(cursor, grid);\n    set(aCursor, newCursor);\n  },\n});\n\nexport let sImageCursor = selector({\n  key: \"imageCursor\",\n  get: ({ get }) => {\n    // TODO clean up logic sometime\n    let cursor = get(aCursor);\n    let grid = get(sGrid);\n    let image = get(aImage);\n    let cell = get(aCell);\n    let x = Math.max(0, cursor[0]);\n    let y = Math.max(0, cursor[1]);\n    let w = Math.min(grid.cols, cursor[0] + cursor[2]) - x;\n    let h = Math.min(grid.rows, cursor[1] + cursor[3]) - y;\n    // final\n    x = x * cell[2] + grid.xoff;\n    y = y * cell[3] + grid.yoff;\n    w = w * cell[2];\n    h = h * cell[3];\n    let x1 = Math.min(x + w, image.width);\n    let y1 = Math.min(y + h, image.height);\n    x = Math.max(x, 0);\n    y = Math.max(y, 0);\n    return [x, y, x1 - x, y1 - y];\n  },\n});\n\nexport let sVisibleCursor = selector({\n  key: \"visibleCursor\",\n  get: ({ get }) => {\n    let zoom = get(aZoom);\n    let padding = get(aPadding);\n    const imageCursor = get(sImageCursor);\n    let collected = imageCursor.map((v) => v * zoom);\n    collected[0] += padding;\n    collected[1] += padding;\n    return collected;\n  },\n});\n\nexport let sCursorOverlap = selector({\n  key: \"cursorOverlap\",\n  get: ({ get }) => {\n    let cursor = get(aCursor);\n    let grid = get(sGrid);\n    let x = cursor[0] < 0;\n    let y = cursor[1] < 0;\n    let x1 = grid.cols < cursor[0] + cursor[2];\n    let y1 = grid.rows < cursor[1] + cursor[3];\n    return [x, y, x1, y1];\n  },\n});\n\nfunction limitCursor(cursor, grid) {\n  // limit width and height to grid size\n  cursor[2] = Math.min(grid.cols, cursor[2]);\n  cursor[3] = Math.min(grid.rows, cursor[3]);\n\n  // limit right movement\n  cursor[0] = Math.min(cursor[0], grid.cols - 1);\n  // limit left movement\n  if (cursor[0] + cursor[2] < 1) cursor[0] = 1 - cursor[2];\n  // limit down movement\n  cursor[1] = Math.min(cursor[1], grid.rows - 1);\n  // limit up movement\n  if (cursor[1] + cursor[3] < 1) cursor[1] = 1 - cursor[3];\n\n  return cursor;\n}\n\nexport let sMoveCursorBy = selector({\n  key: \"moveCursorBy\",\n  set: ({ get, set }, { moveBy, shift }) => {\n    let newCursor = get(aCursor).slice();\n    const grid = get(sGrid);\n    if (shift) {\n      newCursor[0] += moveBy[0] * newCursor[2];\n      newCursor[1] += moveBy[1] * newCursor[3];\n    } else {\n      newCursor[0] += moveBy[0];\n      newCursor[1] += moveBy[1];\n    }\n    set(sCursorLimited, newCursor);\n  },\n});\n\nfunction getCR({ pixel, cell, padding, grid, zoom }) {\n  const x = pixel[0] / zoom;\n  const y = pixel[1] / zoom;\n  const [_x, _y, w, h] = cell;\n  const { xoff, yoff, cols, rows } = grid;\n  const clickX = Math.round((x - xoff - padding) / w);\n  const clickY = Math.round((y - yoff - padding) / h);\n  return [clickX, clickY];\n}\n\nexport let sPlaceCursorPixel = selector({\n  key: \"placeCursor\",\n  set: ({ get, set }, { pixel }) => {\n    let newCursor = get(aCursor).slice();\n    const padding = get(aPadding);\n    const cell = get(aCell);\n    const grid = get(sGrid);\n    const zoom = get(aZoom);\n    const [clickX, clickY] = getCR({\n      pixel,\n      cell,\n      padding,\n      grid,\n      zoom,\n    });\n    newCursor[0] = clickX;\n    newCursor[1] = clickY;\n    newCursor[2] = 1;\n    newCursor[3] = 1;\n    set(sCursorLimited, newCursor);\n  },\n});\n\nexport let aDragResizeStart = atom({\n  key: \"dragResizeStart\",\n  default: [0, 0],\n});\n\nexport let sSetDragResizeStart = selector({\n  key: \"setDragResizeStart\",\n  set: ({ get, set }, { pixel }) => {\n    const padding = get(aPadding);\n    const cell = get(aCell);\n    const grid = get(sGrid);\n    const zoom = get(aZoom);\n    let cr = getCR({ pixel, cell, padding, grid, zoom });\n    cr = [\n      Math.min(Math.max(0, cr[0]), grid.cols),\n      Math.min(Math.max(0, cr[1]), grid.rows),\n    ];\n    set(aDragResizeStart, cr);\n  },\n});\n\nexport let sSetCornerResizeStart = selector({\n  key: \"setCornerResizeStart\",\n  set: ({ get, set }, { pinCorner }) => {\n    let cursor = get(aCursor).slice();\n    let grid = get(sGrid);\n    let cr;\n    if (pinCorner === \"topLeft\") {\n      cr = [cursor[0], cursor[1]];\n    } else if (pinCorner === \"topRight\") {\n      cr = [cursor[0] + cursor[2], cursor[1]];\n    } else if (pinCorner === \"bottomLeft\") {\n      cr = [cursor[0], cursor[1] + cursor[3]];\n    } else if (pinCorner === \"bottomRight\") {\n      cr = [cursor[0] + cursor[2], cursor[1] + cursor[3]];\n    }\n    set(aDragResizeStart, cr);\n  },\n});\n\nexport let sResizeBy = selector({\n  key: \"resizeBy\",\n  set: ({ get, set }, { diff }) => {\n    let cursor = get(aCursor).slice();\n    let grid = get(sGrid);\n    cursor[2] += diff[0];\n    cursor[3] += diff[1];\n    cursor[2] = Math.max(1, cursor[2]);\n    cursor[3] = Math.max(1, cursor[3]);\n    cursor[2] = Math.min(cursor[2], grid.cols - cursor[0]);\n    cursor[3] = Math.min(cursor[3], grid.rows - cursor[1]);\n    set(aCursor, cursor);\n  },\n});\n\nexport let aCursorMoveStart = atom({\n  key: \"cursorMoveStart\",\n  default: [0, 0],\n});\n\nexport let sSetCursorMoveStart = selector({\n  key: \"setCursorMoveStart\",\n  set: ({ get, set }, { pixel }) => {\n    const padding = get(aPadding);\n    const cell = get(aCell);\n    const grid = get(sGrid);\n    const cursor = get(aCursor);\n    const zoom = get(aZoom);\n    const cr = getCR({ pixel, cell, padding, grid, zoom });\n    const xoff = cr[0] - cursor[0];\n    const yoff = cr[1] - cursor[1];\n    set(aCursorMoveStart, [...cr, xoff, yoff]);\n  },\n});\n\nexport let sCursorMoveDrag = selector({\n  key: \"setCursorMoveDrag\",\n  set: ({ get, set }, { pixel }) => {\n    const padding = get(aPadding);\n    const cell = get(aCell);\n    const grid = get(sGrid);\n\n    const zoom = get(aZoom);\n    const cr = getCR({ pixel, cell, padding, grid, zoom });\n    const moveCursorStart = get(aCursorMoveStart);\n    const newCursor = get(aCursor).slice();\n    const diffx = cr[0] - moveCursorStart[0];\n    const diffy = cr[1] - moveCursorStart[1];\n    newCursor[0] = Math.max(\n      0,\n      Math.min(\n        grid.cols - newCursor[2],\n        diffx + moveCursorStart[0] - moveCursorStart[2]\n      )\n    );\n    newCursor[1] = Math.max(\n      0,\n      Math.min(\n        grid.rows - newCursor[3],\n        diffy + moveCursorStart[1] - moveCursorStart[3]\n      )\n    );\n\n    set(sCursorLimited, newCursor);\n  },\n});\n\nexport let sDragResize = selector({\n  key: \"dragResize\",\n  set: ({ get, set }, { pixel }) => {\n    const padding = get(aPadding);\n    const cell = get(aCell);\n    const grid = get(sGrid);\n\n    const dragStart = get(aDragResizeStart);\n    const zoom = get(aZoom);\n    const cr = getCR({ pixel, cell, padding, grid, zoom });\n\n    let cx = Math.min(dragStart[0], cr[0]);\n    let cy = Math.min(dragStart[1], cr[1]);\n    let cx1 = Math.max(dragStart[0], cr[0]);\n    let cy1 = Math.max(dragStart[1], cr[1]);\n    cx = Math.max(0, cx);\n    cy = Math.max(0, cy);\n    let cw = Math.min(grid.cols - cx, Math.abs(cx1 - cx));\n    let ch = Math.min(grid.rows - cy, Math.abs(cy1 - cy));\n    if (cw === 0) cw = 1;\n    if (ch === 0) ch = 1;\n    set(sCursorLimited, [cx, cy, cw, ch]);\n  },\n});\n\nexport let sImageBounds = selector({\n  key: \"imageBounds\",\n  get: ({ get, set }) => {\n    const image = get(aImage);\n    return { x1: 0, y1: 0, x2: image.width, y2: image.height };\n  },\n});\n\nexport let sGrid = selector({\n  key: \"grid\",\n  get: ({ get, set }) => {\n    const cell = get(aCell);\n    const image = get(aImage);\n    let xoff = cell[0] % cell[2];\n    if (xoff > 0) xoff -= cell[2];\n    let cols = Math.ceil((image.width - xoff) / cell[2]);\n    let yoff = cell[1] % cell[3];\n    if (yoff > 0) yoff -= cell[3];\n    let rows = Math.ceil((image.height - yoff) / cell[3]);\n    return { xoff, yoff, cols, rows };\n  },\n});\n\nexport let sRenderSize = selector({\n  key: \"renderSize\",\n  get: ({ get }) => {\n    const image = get(aImage);\n    if (image === null) return [20, 20];\n    const padding = get(aPadding);\n    const zoom = get(aZoom);\n    return [\n      image.width * zoom + padding * 2,\n      image.height * zoom + padding * 2,\n    ];\n  },\n});\n\nexport let aMode = atom({\n  key: \"mode\",\n  default: \"move\",\n});\n\nexport let aFlowChoicePoint = atom({\n  key: \"flowChoicePoint\",\n  default: [0, 0],\n});\n\nexport let aFlows = atom({\n  key: \"flows\",\n  default: [],\n});\n\nexport let sAddFlow = selector({\n  key: \"addFlow\",\n  set: ({ get, set }, dir) => {\n    let flows = get(aFlows).slice();\n    let imageCursor = get(sImageCursor);\n    flows.push({ cursor: imageCursor, dir });\n    set(aFlows, flows);\n  },\n});\n\nexport let aFlow = atom({\n  key: \"flow\",\n  default: true,\n});\n\nexport let sToggleFlow = selector({\n  key: \"toggleFlow\",\n  set: ({ get, set }) => {\n    let flow = get(aFlow);\n    set(aFlow, !flow);\n  },\n});\n\nexport let aShowGrid = atom({\n  key: \"showGrid\",\n  default: false,\n});\n\nexport let sToggleGrid = selector({\n  key: \"toggleGrid\",\n  set: ({ get, set }) => {\n    let showGrid = get(aShowGrid);\n    set(aShowGrid, !showGrid);\n  },\n});\n\nexport let aShowFlow = atom({\n  key: \"showFlow\",\n  default: false,\n});\n\nexport let sToggleShowFlow = selector({\n  key: \"toggleShowFlow\",\n  set: ({ get, set }) => {\n    let showFlow = get(aShowFlow);\n    set(aShowFlow, !showFlow);\n  },\n});\n\nexport let aButtonSize = atom({\n  key: \"buttonSize\",\n  default: matchMedia(\"(pointer:coarse)\").matches ? 48 : 32,\n});\n\nexport let aPointer = atom({\n  key: \"pointer\",\n  default: matchMedia(\"(pointer:coarse)\").matches ? \"coarse\" : \"fine\",\n});\n\nexport let aDrawer = atom({\n  key: \"drawer\",\n  default: { w: 320, h: 220, o: \"side\" },\n});\n\nexport let aShowImageMenu = atom({\n  key: \"showImageMenu\",\n  default: false,\n});\n\nexport let aShowViewMenu = atom({\n  key: \"showViewMenu\",\n  default: false,\n});\n\nexport let aShowGridMenu = atom({\n  key: \"showGridMenu\",\n  default: false,\n});\n\nexport let aCursorColor = atom({\n  key: \"cursorColor\",\n  default: \"#00ffff\",\n});\n\nexport let sZoomLevels = selector({\n  key: \"zoomLevels\",\n  get: ({ get }) => {\n    let [w, h] = get(aWindowSize);\n    let buttonSize = get(aButtonSize);\n    let showShortcuts = get(aShowShortcuts);\n    let image = get(aImage);\n    h -= buttonSize * 2 + 2 + 6;\n    if (showShortcuts) w -= 320;\n    let sizeW = image.width + Scene.padding * 2;\n    let sizeH = image.height + Scene.padding * 2;\n    let ratio = null;\n    let imageRatio = sizeW / sizeH;\n    let windowRatio = w / h;\n    if (imageRatio > windowRatio) {\n      ratio = (w - Scene.padding * 2) / image.width;\n    } else {\n      ratio = (h - Scene.padding * 2) / image.height;\n    }\n    let levels = [0.25, 0.5, 1.0, 1.5, 2, 4];\n    if (ratio !== null) levels.push(ratio);\n    levels.sort();\n    return levels;\n  },\n});\n\nexport let sZoomIn = selector({\n  key: \"zoomIn\",\n  set: ({ get, set }) => {\n    let zoomLevels = get(sZoomLevels);\n    let zoom = get(aZoom);\n    let closest = zoomLevels.reduce(function (prev, curr) {\n      return Math.abs(curr - zoom) < Math.abs(prev - zoom) ? curr : prev;\n    });\n    let index = zoomLevels.indexOf(closest);\n    let newIndex = index + 1;\n    if (newIndex < zoomLevels.length) {\n      set(aZoom, zoomLevels[newIndex]);\n    }\n  },\n});\n\nexport let sZoomOut = selector({\n  key: \"zoomOut\",\n  set: ({ get, set }) => {\n    let zoomLevels = get(sZoomLevels);\n    let zoom = get(aZoom);\n    let closest = zoomLevels.reduce(function (prev, curr) {\n      return Math.abs(curr - zoom) < Math.abs(prev - zoom) ? curr : prev;\n    });\n    let index = zoomLevels.indexOf(closest);\n    let newIndex = index - 1;\n    if (newIndex > -1) {\n      set(aZoom, zoomLevels[newIndex]);\n    }\n  },\n});\n\nexport let sModifyCell = selector({\n  key: \"modifyCell\",\n  set: ({ get, set }, modifications) => {\n    let cell = get(aCell).slice();\n    for (let i = 0; i < cell.length; i++) {\n      cell[i] = parseInt(cell[i]) + parseInt(modifications[i]);\n    }\n    set(aCell, cell);\n  },\n});\n\nexport let aShowShortcuts = atom({\n  key: \"showShortuts\",\n  default: false,\n});\n\nexport let sShortcutPadding = selector({\n  key: \"shortcutPadding\",\n  get: ({ get }) => {\n    let showShortcuts = get(aShowShortcuts);\n    let windowWidth = get(aWindowSize)[0];\n    let renderWidth = get(sRenderSize)[0];\n\n    let p = 0;\n    if (showShortcuts) {\n      if ((windowWidth - renderWidth) / 2 < 320) {\n        p = 320;\n      }\n    }\n    return p;\n  },\n});\n\nexport let sToggleShortcuts = selector({\n  key: \"toggleShortcuts\",\n  set: ({ get, set }) => {\n    let shortcuts = get(aShowShortcuts);\n    set(aShowShortcuts, !shortcuts);\n  },\n});\n\nexport let aShowAbout = atom({\n  key: \"showAbout\",\n  default: false,\n});\n\nexport let sToggleShowAbout = selector({\n  key: \"toggleShowAbout\",\n  set: ({ get, set }) => {\n    let about = get(aShowAbout);\n    set(aShowAbout, !about);\n  },\n});\n","export function eq(c1, c2) {\n  return c1 === c2;\n}\n\nexport function or(c1, c2) {\n  return c1 || c2;\n}\n\nexport const loadImage = (src) => {\n  return new Promise((resolve, reject) => {\n    const image = new Image();\n    image.onload = function () {\n      resolve(image);\n    };\n    image.src = src;\n  });\n};\n","import { loadImage } from \"./Utils\";\nimport Scene from \"./Scene\";\n\nexport function domLoadImage(callback) {\n  let input = document.querySelector(\"#fileInput\");\n  async function handleChange(e) {\n    for (let item of this.files) {\n      if (item.type.indexOf(\"image\") < 0) {\n        continue;\n      }\n      let src = URL.createObjectURL(item);\n      let image = await loadImage(src);\n      callback(image);\n      this.removeEventListener(\"change\", handleChange);\n    }\n  }\n  input.addEventListener(\"change\", handleChange);\n\n  input.dispatchEvent(\n    new MouseEvent(\"click\", {\n      bubbles: true,\n      cancelable: true,\n      view: window,\n    })\n  );\n  return input;\n}\n\nexport function saveImage() {\n  let c = document.createElement(\"canvas\");\n  let link = document.createElement(\"a\");\n  let ic = Scene.layersRef.current.imageLayer;\n  c.width = ic.width;\n  c.height = ic.height;\n  let cx = c.getContext(\"2d\");\n  cx.drawImage(ic, 0, 0);\n  c.toBlob(function (blob) {\n    link.setAttribute(\n      \"download\",\n      \"flow-\" + Math.round(new Date().getTime() / 1000) + \".png\"\n    );\n    link.setAttribute(\"href\", URL.createObjectURL(blob));\n    link.dispatchEvent(\n      new MouseEvent(`click`, {\n        bubbles: true,\n        cancelable: true,\n        view: window,\n      })\n    );\n  });\n}\n\nexport async function onPaste(e, callback) {\n  e.preventDefault();\n  e.stopPropagation();\n  for (const item of e.clipboardData.items) {\n    if (item.type.indexOf(\"image\") < 0) {\n      continue;\n    }\n    let file = item.getAsFile();\n    let src = URL.createObjectURL(file);\n    let image = await loadImage(src);\n    callback(image);\n  }\n}\n\nexport async function onDrop(e, callback) {\n  e.preventDefault();\n  e.stopPropagation();\n  let file = e.dataTransfer.files[0];\n  let src = URL.createObjectURL(file);\n  let image = await loadImage(src);\n  callback(image);\n}\n\nexport async function onDrag(e) {\n  e.stopPropagation();\n  e.preventDefault();\n  e.dataTransfer.dropEffect = \"copy\";\n}\n","import { useEffect, useRef } from \"react\";\nimport {\n  RecoilRoot,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n} from \"recoil\";\nimport {\n  aMode,\n  sMoveCursorBy,\n  sAddFlow,\n  sToggleFlow,\n  sToggleGrid,\n  sResizeBy,\n  sToggleShowFlow,\n  aImage,\n  aFlows,\n  aShowGridMenu,\n  sZoomIn,\n  sZoomOut,\n  sToggleShortcuts,\n  aShowAbout,\n} from \"./State.js\";\nimport { eq, loadImage } from \"./Utils\";\nimport { domLoadImage, saveImage } from \"./Actions\";\nimport Scene from \"./Scene\";\n\nfunction Keyboard() {\n  const kmRef = useRef({});\n  const moveCursorBy = useSetRecoilState(sMoveCursorBy);\n  const [mode, setMode] = useRecoilState(aMode);\n  const setShowAbout = useSetRecoilState(aShowAbout);\n  const addFlow = useSetRecoilState(sAddFlow);\n  const toggleFlow = useSetRecoilState(sToggleFlow);\n  const toggleShowFlow = useSetRecoilState(sToggleShowFlow);\n  const toggleGrid = useSetRecoilState(sToggleGrid);\n  const resizeBy = useSetRecoilState(sResizeBy);\n  const [image, setImage] = useRecoilState(aImage);\n  const setFlows = useSetRecoilState(aFlows);\n  const zoomIn = useSetRecoilState(sZoomIn);\n  const zoomOut = useSetRecoilState(sZoomOut);\n  const setShowGridMenu = useSetRecoilState(aShowGridMenu);\n  const toggleShortcuts = useSetRecoilState(sToggleShortcuts);\n\n  useEffect(() => {\n    const km = kmRef.current;\n    async function pressed(press, e) {\n      // global\n      if (press === \"o\") {\n        // load image\n        function callback(image) {\n          setImage(image);\n          Scene.image = image;\n          setFlows([]);\n        }\n        domLoadImage(callback);\n      } else if (press === \"i\") {\n        let originalImage = await loadImage(image.src);\n        setImage(originalImage);\n        Scene.image = originalImage;\n      } else if (press === \"c\") {\n        setFlows([]);\n      } else if (press === \"p\") {\n        saveImage();\n      } else if (press === \"g\") {\n        setShowGridMenu(true);\n      } else if (press === \" \") {\n        toggleFlow();\n      } else if (press === \"+\") {\n        zoomIn();\n      } else if (press === \"-\") {\n        zoomOut();\n      } else if (press === \";\") {\n        toggleGrid();\n      } else if (press === \"/\") {\n        toggleShowFlow();\n      } else if (press === \"?\") {\n        toggleShortcuts();\n      } else if (press === \"a\") {\n        setShowAbout(true);\n      }\n\n      switch (mode) {\n        case \"move\":\n          {\n            switch (press) {\n              case \"enter\": {\n                setMode(\"flow\");\n                break;\n              }\n              case \"r\": {\n                setMode(\"resize\");\n                break;\n              }\n            }\n\n            // multiple press\n            let moveBy = [0, 0];\n            if (km.arrowleft || km.h) {\n              moveBy[0] -= 1;\n            }\n            if (km.arrowright || km.l) {\n              moveBy[0] += 1;\n            }\n            if (km.arrowup || km.k) {\n              moveBy[1] -= 1;\n            }\n            if (km.arrowdown || km.j) {\n              moveBy[1] += 1;\n            }\n            if (moveBy[0] !== 0 || moveBy[1] !== 0) {\n              e.preventDefault();\n              moveCursorBy({ moveBy, shift: e.shiftKey });\n            }\n          }\n          break;\n        case \"flow\":\n          {\n            if (eq(press, \"escape\")) {\n              setMode(\"move\");\n            } else if (eq(press, \"x\")) {\n              setMode(\"move\");\n            } else if (eq(press, \"arrowleft\") || eq(press, \"h\")) {\n              addFlow(\"w\");\n              setMode(\"move\");\n            } else if (eq(press, \"arrowright\") || eq(press, \"l\")) {\n              addFlow(\"e\");\n              setMode(\"move\");\n            } else if (eq(press, \"arrowup\") || eq(press, \"k\")) {\n              addFlow(\"n\");\n              setMode(\"move\");\n            } else if (eq(press, \"arrowdown\") || eq(press, \"j\")) {\n              addFlow(\"s\");\n              setMode(\"move\");\n            }\n          }\n          break;\n        case \"resize\":\n          {\n            if (eq(press, \"escape\")) {\n              setMode(\"move\");\n            }\n            if (eq(press, \"enter\")) {\n              setMode(\"move\");\n            }\n\n            let diff = [0, 0];\n            if (km.arrowleft || km.h) {\n              diff[0] -= 1;\n            }\n            if (km.arrowright || km.l) {\n              diff[0] += 1;\n            }\n            if (km.arrowup || km.k) {\n              diff[1] -= 1;\n            }\n            if (km.arrowdown || km.j) {\n              diff[1] += 1;\n            }\n            if (diff[0] !== 0 || diff[1] !== 0) {\n              e.preventDefault();\n              resizeBy({ diff });\n            }\n          }\n          break;\n      }\n    }\n\n    function downHandler(e) {\n      let press = e.key.toLowerCase();\n      km[press] = true;\n      pressed(press, e);\n    }\n\n    function upHandler(e) {\n      let press = e.key.toLowerCase();\n      km[press] = false;\n    }\n\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  });\n\n  return null;\n}\n\nexport default Keyboard;\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport {\n  aCanvas,\n  sPlaceCursorPixel,\n  sSetDragResizeStart,\n  sDragResize,\n  aMode,\n  sSetCursorMoveStart,\n  sCursorMoveDrag,\n  aZoom,\n  sAdjustZoom,\n  aPadding,\n  aImage,\n  aFlows,\n} from \"./State.js\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport Scene from \"./Scene\";\nimport { onPaste, onDrag, onDrop } from \"./Actions\";\n\nfunction checkCursorPixel({ Scene, pixel }) {\n  let cp = Scene.visibleCursor;\n  let [x, y] = pixel;\n  return x > cp[0] && x < cp[0] + cp[2] && y > cp[1] && y < cp[1] + cp[3];\n}\n\nfunction Pointer() {\n  const canvas = useRecoilValue(aCanvas);\n  const container = canvas.parentElement.parentElement;\n  const padding = useRecoilValue(aPadding);\n  const placeCursorPixel = useSetRecoilState(sPlaceCursorPixel);\n  const [mode, setMode] = useRecoilState(aMode);\n  const setDragResizeStart = useSetRecoilState(sSetDragResizeStart);\n  const setCursorMoveStart = useSetRecoilState(sSetCursorMoveStart);\n  const adjustZoom = useSetRecoilState(sAdjustZoom);\n  const setImage = useSetRecoilState(aImage);\n  const setFlows = useSetRecoilState(aFlows);\n  const dragCursor = useSetRecoilState(sCursorMoveDrag);\n  const dragResize = useSetRecoilState(sDragResize);\n  const pointerRef = useRef({\n    primary: {\n      down: false,\n    },\n    secondary: {\n      down: false,\n    },\n    clickWindow: false,\n    oneDrag: false,\n    twoDrag: false,\n    cursorDrag: false,\n    ignore: false,\n  });\n\n  function dropLoader(e) {\n    function callback(image) {\n      setImage(image);\n      Scene.image = image;\n      setFlows([]);\n    }\n    onDrop(e, callback);\n  }\n  function pasteLoader(e) {\n    function callback(image) {\n      setImage(image);\n      Scene.image = image;\n      setFlows([]);\n    }\n    onPaste(e, callback);\n  }\n\n  useEffect(() => {\n    const pointer = pointerRef.current;\n    const scrollContainer = canvas.parentElement.parentElement;\n\n    const getXY = (e) => {\n      let bounds = canvas.getBoundingClientRect();\n      let x = e.clientX - bounds.left;\n      let y = e.clientY - bounds.top;\n      return [x, y];\n    };\n\n    function handleClick(e, position) {\n      // one finger only\n      placeCursorPixel({ pixel: pointer.primary.position });\n    }\n\n    function boundPosition(position) {\n      return [\n        Math.min(canvas.width - padding * 2, Math.max(padding, position[0])),\n        Math.min(canvas.height - padding * 2, Math.max(padding, position[1])),\n      ];\n    }\n\n    function pointerDown(e) {\n      if (e.target.classList.contains(\"stopClick\")) {\n        pointer.ignore = true;\n      } else {\n        const position = getXY(e);\n        if (e.isPrimary) {\n          pointer.primary.down = true;\n          pointer.primary.position = position;\n        } else {\n          pointer.secondary.down = true;\n          pointer.secondary.position = position;\n        }\n        let check = checkCursorPixel({ Scene, pixel: position });\n        if (check) {\n          pointer.cursorDrag = true;\n          setMode(\"move\");\n          setCursorMoveStart({ pixel: position });\n        } else {\n          handleClick(e, position);\n        }\n\n        container.setPointerCapture(e.pointerId);\n      }\n    }\n\n    function pointerMove(e) {\n      const position = getXY(e);\n\n      if (pointer.primary.down && pointer.secondary.down) {\n        // pointer.oneDrag = false;\n        // pointer.twoDrag = true;\n        // let distX = pointer.secondary.position[0] - pointer.primary.position[0];\n        // let distY = pointer.secondary.position[1] - pointer.primary.position[1];\n        // pointer.twoDist = Math.sqrt(distX * distX + distY * distY);\n      } else if (pointer.primary.down) {\n        if (!pointer.twoDrag) {\n          if (!pointer.oneDrag) {\n            // initialize one drag\n            if (pointer.cursorDrag) {\n              dragCursor({ pixel: position });\n            } else {\n              setDragResizeStart({ pixel: boundPosition(position) });\n              setMode(\"resize\");\n              pointer.oneDrag = true;\n            }\n          }\n        }\n      }\n\n      if (e.isPrimary) {\n        if (pointer.primary.down) {\n          pointer.primary.position = position;\n        }\n      } else {\n        if (pointer.secondary.down) {\n          pointer.secondary.position = position;\n        }\n      }\n\n      if (pointer.oneDrag) {\n        if (pointer.cursorDrag) {\n        } else {\n          setMode(\"resize\");\n          dragResize({ pixel: position });\n        }\n      } else if (pointer.twoDrag) {\n        if (e.isPrimary) {\n          let dx = position[0] - pointer.primary.position[0];\n          let dy = position[1] - pointer.primary.position[1];\n          scrollContainer.scrollBy(-dx, -dy);\n        } else {\n          // Abandoned zoom interaction\n          // let distX =\n          //   pointer.secondary.position[0] - pointer.primary.position[0];\n          // let distY =\n          //   pointer.secondary.position[1] - pointer.primary.position[1];\n          // let twoDist = Math.sqrt(distX * distX + distY * distY);\n          // let twoDistDiff = twoDist - pointer.twoDisto;\n          // // let dx = position[0] - pointer.secondary.position[0];\n          // adjustZoom({ diff: twoDistDiff / 100 });\n          // pointer.twoDist = twoDist;\n        }\n      }\n    }\n\n    function pointerUp(e) {\n      if (pointer.ignore) {\n        pointer.ignore = false;\n      } else {\n        const position = getXY(e);\n\n        if (e.isPrimary) {\n          pointer.primary.down = false;\n          pointer.primary.position = position;\n        } else {\n          pointer.secondary.down = false;\n          pointer.secondary.position = position;\n        }\n\n        if (e.isPrimary) {\n          if (!pointer.oneDrag && !pointer.twoDrag) {\n            if (!pointer.primary.down) {\n              if (pointer.clickWindow) {\n                pointer.clickWindow = false;\n                placeCursorPixel({ pixel: pointer.primary.position });\n              }\n            }\n          }\n        }\n\n        if (!pointer.primary.down) {\n          if (!pointer.twoDrag) {\n            setMode(\"flow\");\n          }\n          pointer.oneDrag = false;\n          pointer.twoDrag = false;\n          pointer.cursorDrag = false;\n        }\n\n        container.releasePointerCapture(e.pointerId);\n      }\n    }\n\n    container.addEventListener(\"pointerdown\", pointerDown);\n    container.addEventListener(\"pointermove\", pointerMove);\n    container.addEventListener(\"pointerup\", pointerUp);\n    window.addEventListener(\"paste\", pasteLoader);\n    window.addEventListener(\"dragover\", onDrag);\n    window.addEventListener(\"drop\", dropLoader);\n    return () => {\n      container.removeEventListener(\"pointerdown\", pointerDown);\n      container.removeEventListener(\"pointermove\", pointerMove);\n      container.removeEventListener(\"pointerup\", pointerUp);\n      window.removeEventListener(\"paste\", pasteLoader);\n      window.removeEventListener(\"dragover\", onDrag);\n      window.removeEventListener(\"drop\", dropLoader);\n    };\n  }, [mode]);\n\n  return null;\n}\n\nexport default Pointer;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  RecoilRoot,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n} from \"recoil\";\nimport {\n  aWindowSize,\n  sSetWindowSize,\n  aCanvas,\n  aImage,\n  aPadding,\n  sRenderSize,\n  aMode,\n  aCell,\n  aCursor,\n  aZoom,\n  sGrid,\n  sImageBounds,\n  sVisibleCursor,\n  sCursorOverlap,\n  aFlows,\n  aFlow,\n  sAddFlow,\n  aShowGrid,\n  aShowFlow,\n  aButtonSize,\n  aShowImageMenu,\n  aShowViewMenu,\n  sToggleShowFlow,\n  sToggleGrid,\n  aCursorColor,\n  aShowGridMenu,\n  sModifyCell,\n  sToggleShortcuts,\n  aShowShortcuts,\n  aShowAbout,\n  sToggleShowAbout,\n} from \"./State\";\nimport { loadImage } from \"./Utils\";\nimport { domLoadImage, saveImage } from \"./Actions\";\nimport Scene from \"./Scene\";\n\nfunction Button({ children, click, style }) {\n  return (\n    <div\n      role=\"button\"\n      className=\"hover\"\n      onClick={click}\n      style={{\n        padding: \"0 12px\",\n        textAlign: \"center\",\n        minWidth: 44,\n        ...style,\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nfunction RepeatButton({ children, click, style }) {\n  let intervalId = useRef(null);\n  let repeat = useRef(false);\n\n  function pointerDown(e) {\n    click();\n    repeat.current = true;\n    clearInterval(intervalId.current);\n    setTimeout(() => {\n      if (repeat.current) {\n        clearInterval(intervalId.current);\n        intervalId.current = setInterval(click, 40);\n      }\n    }, 300);\n    e.target.setPointerCapture(e.pointerId);\n  }\n\n  function pointerUp(e) {\n    repeat.current = false;\n    clearInterval(intervalId.current);\n    e.target.releasePointerCapture(e.pointerId);\n  }\n\n  return (\n    <div\n      role=\"button\"\n      className=\"hover\"\n      onPointerDown={pointerDown}\n      onPointerUp={pointerUp}\n      style={{\n        textAlign: \"center\",\n        minWidth: 44,\n        ...style,\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nfunction Option({ children, click, k, c }) {\n  function handleClick(e) {\n    click(e);\n  }\n\n  return (\n    <div\n      className=\"clickButton\"\n      onClick={handleClick}\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        padding: \"0 8px\",\n        cursor: \"pointer\",\n        height: 44,\n        borderBottom: \"solid 1px #000\",\n        alignItems: \"center\",\n      }}\n    >\n      <div>{children}</div>{\" \"}\n    </div>\n  );\n}\n\nfunction Box({ children, style }) {\n  function handleClick(e) {\n    e.stopPropagation();\n  }\n\n  return (\n    <div\n      onClick={handleClick}\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        padding: \"0 8px\",\n        cursor: \"pointer\",\n        height: 44,\n        lineHeight: \"44px\",\n        alignItems: \"center\",\n        ...style,\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nfunction NumberInput({ val, setVal, modifyVal }) {\n  const buttonSize = useRecoilValue(aButtonSize);\n  function increment() {\n    modifyVal(1);\n  }\n  function decrement() {\n    modifyVal(-1);\n  }\n  function handleChange(e) {\n    setVal(e.target.value);\n  }\n\n  return (\n    <React.Fragment>\n      <input\n        style={{\n          padding: 0,\n          textAlign: \"right\",\n          flexGrow: 1,\n          height: 26,\n        }}\n        value={val}\n        onChange={handleChange}\n        type=\"number\"\n      />\n      <RepeatButton click={decrement}>↓</RepeatButton>\n      <RepeatButton click={increment}>↑</RepeatButton>\n    </React.Fragment>\n  );\n}\n\nfunction Menu({ children, setState }) {\n  const buttonSize = useRecoilValue(aButtonSize);\n\n  useEffect(() => {\n    function downHandler(e) {\n      if (e.key.toLowerCase() === \"escape\") {\n        setState(false);\n      }\n    }\n\n    window.addEventListener(\"keydown\", downHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n    };\n  }, []);\n\n  function handleClick(e) {\n    setState(false);\n  }\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        left: 0,\n        top: buttonSize,\n        right: 0,\n        bottom: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"start\",\n        paddingTop: 16,\n      }}\n      onClick={handleClick}\n    >\n      <div\n        style={{\n          background: \"white\",\n          width: 320,\n          border: \"solid 1px #000\",\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n\nfunction MenuItem({ name, children, style, state, setState }) {\n  function handleClick(e) {\n    setState(!state);\n  }\n\n  return (\n    <div>\n      <div\n        className={state ? \"active\" : \"hover\"}\n        role=\"button\"\n        onClick={handleClick}\n        style={{\n          width: \"8.5ch\",\n          cursor: \"pointer\",\n          userSelect: \"none\",\n          ...style,\n        }}\n      >\n        {name}\n      </div>\n      {state ? <Menu setState={setState}>{children}</Menu> : null}\n    </div>\n  );\n}\n\nfunction Divider() {\n  return (\n    <div\n      style={{\n        background: \"#000\",\n        height: 2,\n        borderTop: \"solid 1px white\",\n        width: \"100%\",\n      }}\n    ></div>\n  );\n}\n\nfunction MenuBar() {\n  let [showImageMenu, setShowImageMenu] = useRecoilState(aShowImageMenu);\n  let [showViewMenu, setShowViewMenu] = useRecoilState(aShowViewMenu);\n  let [showAbout, setShowAbout] = useRecoilState(aShowAbout);\n  const [image, setImage] = useRecoilState(aImage);\n  const setFlows = useSetRecoilState(aFlows);\n  const size = useRecoilValue(aWindowSize);\n  const toggleShowFlow = useSetRecoilState(sToggleShowFlow);\n  const toggleGrid = useSetRecoilState(sToggleGrid);\n  const toggleShortcuts = useSetRecoilState(sToggleShortcuts);\n  const showShortcuts = useRecoilValue(aShowShortcuts);\n  const [showGrid, setShowGrid] = useRecoilState(aShowGrid);\n  const showFlow = useRecoilValue(aShowFlow);\n  const [cell, setCell] = useRecoilState(aCell);\n  const modifyCell = useSetRecoilState(sModifyCell);\n  const buttonSize = useRecoilValue(aButtonSize);\n  const [showGridMenu, setShowGridMenu] = useRecoilState(aShowGridMenu);\n  const [cursorColor, setCursorColor] = useRecoilState(aCursorColor);\n  const [flow, setFlow] = useRecoilState(aFlow);\n\n  function imageLoader() {\n    function callback(image) {\n      setImage(image);\n      Scene.image = image;\n      setFlows([]);\n    }\n    domLoadImage(callback);\n  }\n  async function revertImage() {\n    let originalImage = await loadImage(image.src);\n    setImage(originalImage);\n    Scene.image = originalImage;\n  }\n  function setCellWidth(val) {\n    let newCell = cell.slice();\n    newCell[2] = val;\n    setCell(newCell);\n  }\n  function modifyCellWidth(mod) {\n    modifyCell([0, 0, mod, 0]);\n  }\n  function setCellHeight(val) {\n    let newCell = cell.slice();\n    newCell[3] = val;\n    setCell(newCell);\n  }\n  function modifyCellHeight(mod) {\n    modifyCell([0, 0, 0, mod]);\n  }\n  function setCellX(val) {\n    let newCell = cell.slice();\n    newCell[0] = val;\n    setCell(newCell);\n  }\n  function setCellY(val) {\n    let newCell = cell.slice();\n    newCell[1] = val;\n    setCell(newCell);\n  }\n  function modifyCellX(mod) {\n    modifyCell([mod, 0, 0, 0]);\n  }\n  function modifyCellY(mod) {\n    modifyCell([0, mod, 0, 0]);\n  }\n\n  function clearAndSet(callback, val) {\n    setShowImageMenu(false);\n    setShowGridMenu(false);\n    setShowViewMenu(false);\n    setShowAbout(false);\n    callback(val);\n  }\n\n  return (\n    <div\n      style={{\n        borderBottom: \"solid 1px #000\",\n        display: \"flex\",\n        justifyContent: size[0] < 640 ? \"space-evenly\" : \"center\",\n        lineHeight: buttonSize + \"px\",\n        position: \"relative\",\n        zIndex: 9,\n        textAlign: \"center\",\n        userSelect: \"none\",\n      }}\n    >\n      <MenuItem\n        name=\"Image\"\n        state={showImageMenu}\n        setState={clearAndSet.bind(null, setShowImageMenu)}\n      >\n        <Option click={imageLoader}>Open image</Option>\n        <Option click={revertImage}>Revert image</Option>\n        <Option click={saveImage}>Save as image</Option>\n        <Option\n          click={() => {\n            setFlow(!flow);\n          }}\n        >\n          {flow ? \"Pause\" : \"Unpause\"} flows\n        </Option>\n        <Option\n          click={() => {\n            setFlows([]);\n          }}\n        >\n          Clear flows\n        </Option>\n      </MenuItem>\n      <MenuItem\n        name=\"Grid\"\n        state={showGridMenu}\n        setState={clearAndSet.bind(null, setShowGridMenu)}\n      >\n        <div\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-Between\",\n          }}\n        >\n          <div\n            style={{\n              lineHeight: 44 + \"px\",\n              height: 44,\n              padding: \"0 8px\",\n            }}\n          >\n            Cell size\n          </div>\n          <div\n            onClick={(e) => {\n              e.stopPropagation();\n              setShowGridMenu(false);\n            }}\n            className=\"hover\"\n            style={{\n              lineHeight: 44 + \"px\",\n              height: 44,\n              width: 44,\n              cursor: \"pointer\",\n            }}\n          >\n            &times;\n          </div>\n        </div>\n        <Box\n          style={{\n            padding: 0,\n            paddingLeft: \"1ch\",\n            cursor: \"default\",\n          }}\n        >\n          <div\n            style={{\n              width: \"9ch\",\n              flexShrink: 0,\n              textAlign: \"left\",\n              userSelect: \"none\",\n            }}\n          >\n            Width\n          </div>{\" \"}\n          <NumberInput\n            val={cell[2]}\n            setVal={setCellWidth}\n            modifyVal={modifyCellWidth}\n          />\n        </Box>\n        <Box\n          style={{\n            padding: 0,\n            paddingLeft: \"1ch\",\n            cursor: \"default\",\n          }}\n        >\n          <div\n            style={{\n              width: \"9ch\",\n              flexShrink: 0,\n              textAlign: \"left\",\n              userSelect: \"none\",\n            }}\n          >\n            Height\n          </div>\n          <NumberInput\n            val={cell[3]}\n            setVal={setCellHeight}\n            modifyVal={modifyCellHeight}\n          />\n        </Box>\n        <Box\n          style={{\n            padding: 0,\n            paddingLeft: \"1ch\",\n            cursor: \"default\",\n          }}\n        >\n          <div\n            style={{\n              width: \"9ch\",\n              flexShrink: 0,\n              textAlign: \"left\",\n              userSelect: \"none\",\n            }}\n          >\n            X offset\n          </div>{\" \"}\n          <NumberInput\n            val={cell[0]}\n            setVal={setCellX}\n            modifyVal={modifyCellX}\n          />\n        </Box>\n        <Box\n          style={{\n            padding: 0,\n            paddingLeft: \"1ch\",\n            userSelect: \"none\",\n            cursor: \"default\",\n          }}\n        >\n          <div\n            style={{\n              width: \"9ch\",\n              flexShrink: 0,\n              textAlign: \"left\",\n            }}\n          >\n            Y offset\n          </div>{\" \"}\n          <NumberInput\n            val={cell[1]}\n            setVal={setCellY}\n            modifyVal={modifyCellY}\n          />\n        </Box>\n      </MenuItem>\n      <MenuItem\n        name=\"View\"\n        state={showViewMenu}\n        setState={clearAndSet.bind(null, setShowViewMenu)}\n      >\n        <Option click={toggleGrid}>{showGrid ? \"Hide\" : \"Show\"} grid</Option>\n        <Option click={toggleShowFlow}>\n          {showFlow ? \"Hide\" : \"Show\"} flow outlines\n        </Option>\n        <Option click={toggleShortcuts}>\n          {showShortcuts ? \"Hide\" : \"Show\"} keyboard controls\n        </Option>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            padding: \"0 8px\",\n            height: 44,\n            borderBottom: \"solid 1px #000\",\n            alignItems: \"center\",\n            userSelect: \"none\",\n          }}\n        >\n          <div>Cursor color</div>\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <input\n              style={{ display: \"block\" }}\n              type=\"color\"\n              value={cursorColor}\n              onClick={(e) => {\n                e.stopPropagation();\n              }}\n              onChange={(e) => {\n                setCursorColor(e.target.value);\n              }}\n            />\n            &nbsp;\n            <div>Reset</div>\n          </div>\n        </div>\n      </MenuItem>\n      <MenuItem\n        name=\"About\"\n        state={showAbout}\n        setState={clearAndSet.bind(null, setShowAbout)}\n      >\n        <div\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-Between\",\n          }}\n        >\n          <div\n            style={{\n              lineHeight: 44 + \"px\",\n              height: 44,\n              padding: \"0 8px\",\n            }}\n          >\n            About\n          </div>\n          <div\n            onClick={(e) => {\n              e.stopPropagation();\n              setShowAbout(false);\n            }}\n            className=\"hover\"\n            style={{\n              lineHeight: 44 + \"px\",\n              height: 44,\n              width: 44,\n              cursor: \"pointer\",\n            }}\n          >\n            &times;\n          </div>\n        </div>\n        <div\n          style={{\n            textAlign: \"left\",\n            padding: \"0 8px 8px\",\n            lineHeight: \"18px\",\n          }}\n        >\n          <p>\n            Flow is an experimental image editor. Set and direct pixel-flows\n            using touch or keyboard controls. Overlap flows to create\n            interesting effects.\n          </p>\n          <p>\n            A{\" \"}\n            <a\n              href=\"https://constraint.systems\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Constraint Systems\n            </a>{\" \"}\n            project\n          </p>\n        </div>\n      </MenuItem>\n    </div>\n  );\n}\n\nexport default MenuBar;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  RecoilRoot,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n} from \"recoil\";\nimport {\n  aWindowSize,\n  sSetWindowSize,\n  aCanvas,\n  aImage,\n  aPadding,\n  sRenderSize,\n  aMode,\n  aCell,\n  aCursor,\n  aZoom,\n  sGrid,\n  sImageBounds,\n  sVisibleCursor,\n  sCursorOverlap,\n  aFlows,\n  aFlow,\n  sAddFlow,\n  aShowGrid,\n  aShowFlow,\n  aButtonSize,\n  aCursorColor,\n  sToggleFlow,\n  sZoomLevels,\n  sZoomIn,\n  sZoomOut,\n} from \"./State\";\nimport { domLoadImage, saveImage } from \"./Actions\";\n\nfunction Button({ children, click, style }) {\n  return (\n    <div\n      role=\"button\"\n      className=\"hover\"\n      onClick={click}\n      style={{\n        textAlign: \"center\",\n        ...style,\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nfunction StatusBar() {\n  const [zoom, setZoom] = useRecoilState(aZoom);\n  const [flow, setFlow] = useRecoilState(aFlow);\n  const image = useRecoilValue(aImage);\n  const cursorColor = useRecoilValue(aCursorColor);\n  const toggleFlow = useSetRecoilState(sToggleFlow);\n  const zoomLevels = useRecoilValue(sZoomLevels);\n  const size = useRecoilValue(aWindowSize);\n  const zoomIn = useSetRecoilState(sZoomIn);\n  const zoomOut = useSetRecoilState(sZoomOut);\n  const buttonSize = useRecoilValue(aButtonSize);\n\n  return (\n    <div\n      style={{\n        borderTop: \"solid 1px #000\",\n        display: \"flex\",\n        justifyContent: size[0] < 640 ? \"space-evenly\" : \"center\",\n        lineHeight: buttonSize + 6 + \"px\",\n        textAlign: \"center\",\n      }}\n    >\n      <Button\n        click={saveImage}\n        style={{\n          width: \"8.5ch\",\n        }}\n      >\n        Save\n      </Button>\n      {flow ? (\n        <Button\n          click={toggleFlow}\n          style={{\n            width: \"8.5ch\",\n          }}\n        >\n          Pause\n        </Button>\n      ) : (\n        <Button\n          click={toggleFlow}\n          style={{ width: \"8.5ch\", background: \"#444\", color: \"#fff\" }}\n        >\n          Paused\n        </Button>\n      )}\n      <div style={{ width: \"8.5ch\" }}>{Math.round(zoom * 100)}%</div>\n      <Button\n        style={{ minWidth: \"5.5ch\" }}\n        click={() => {\n          zoomIn();\n        }}\n      >\n        +\n      </Button>\n      <Button\n        style={{ minWidth: \"5.5ch\" }}\n        click={() => {\n          zoomOut();\n        }}\n      >\n        -\n      </Button>\n    </div>\n  );\n}\n\nexport default StatusBar;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  RecoilRoot,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n} from \"recoil\";\nimport { aWindowSize, aMode, aButtonSize, aShowShortcuts } from \"./State\";\n\nfunction Entry({ children, style }) {\n  return (\n    <div\n      style={{\n        paddingTop: 4,\n        paddingBottom: 4,\n        paddingLeft: \"1ch\",\n        paddingRight: \"1ch\",\n        display: \"flex\",\n        ...style,\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nfunction KeyEntry({ char, children, style }) {\n  return (\n    <Entry>\n      <div\n        style={{\n          outline: \"solid 1px black\",\n          paddingLeft: \"0.5ch\",\n          paddingRight: \"0.5ch\",\n          marginRight: \"1ch\",\n          ...style,\n        }}\n      >\n        {char}\n      </div>{\" \"}\n      <div>{children}</div>\n    </Entry>\n  );\n}\n\nfunction Shortcuts() {\n  const size = useRecoilValue(aWindowSize);\n  const mode = useRecoilValue(aMode);\n  const buttonSize = useRecoilValue(aButtonSize);\n  const [showShortcuts, setShowShortcuts] = useRecoilState(aShowShortcuts);\n\n  let bg = \"#e6e6e6\";\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        right: 0,\n        top: buttonSize + 1,\n        height: size[1] - (buttonSize * 2 + 6 + 2),\n        borderLeft: \"solid 1px #000\",\n        background: \"white\",\n        width: 320,\n        overflow: \"auto\",\n        display: showShortcuts ? \"block\" : \"none\",\n      }}\n    >\n      <div\n        className=\"hover\"\n        onClick={() => setShowShortcuts(false)}\n        style={{\n          width: \"6ch\",\n          position: \"absolute\",\n          cursor: \"pointer\",\n          textAlign: \"center\",\n          right: 0,\n          paddingTop: 4,\n          paddingBottom: 4,\n          lineHeight: buttonSize + \"px\",\n        }}\n      >\n        &times;\n      </div>\n      <Entry style={{ lineHeight: buttonSize + \"px\" }}>Keyboard controls</Entry>\n      <div\n        style={{\n          background: mode === \"move\" ? bg : \"none\",\n          paddingBottom: 4,\n        }}\n      >\n        <Entry>Move</Entry>\n        <KeyEntry char=\"←↑↓→\">Move cursor</KeyEntry>\n        <KeyEntry char=\"+shift\">Move by cursor size</KeyEntry>\n        <KeyEntry char=\"enter\">Flow mode</KeyEntry>\n        <KeyEntry char=\"r\">Resize cursor mode</KeyEntry>\n      </div>\n      <div\n        style={{\n          background: mode === \"flow\" ? bg : \"none\",\n          paddingBottom: 4,\n        }}\n      >\n        <Entry>Flow</Entry>\n        <KeyEntry char=\"←↑↓→\">Choose flow direction</KeyEntry>\n        <KeyEntry char=\"escape/x\">cancel</KeyEntry>\n      </div>\n      <div\n        style={{\n          background: mode === \"resize\" ? bg : \"none\",\n          paddingBottom: 4,\n        }}\n      >\n        <Entry>Resize cursor</Entry>\n        <KeyEntry char=\"←→\">Change width</KeyEntry>\n        <KeyEntry char=\"↑↓\">Change height</KeyEntry>\n        <KeyEntry char=\"enter/escape\">finish</KeyEntry>\n      </div>\n      <div\n        style={{\n          paddingBottom: 4,\n        }}\n      >\n        <Entry>Image</Entry>\n        <KeyEntry char=\"o\">Open image</KeyEntry>\n        <KeyEntry char=\"i\">Revert image</KeyEntry>\n        <KeyEntry char=\"p\">Save as image</KeyEntry>\n        <KeyEntry char=\"space\">Toggle flows</KeyEntry>\n        <KeyEntry char=\"c\">Clear flows</KeyEntry>\n      </div>\n      <div\n        style={{\n          paddingBottom: 4,\n        }}\n      >\n        <Entry>Grid</Entry>\n        <KeyEntry char=\"g\">Show grid controls</KeyEntry>\n      </div>\n      <div\n        style={{\n          paddingBottom: 4,\n        }}\n      >\n        <Entry>View</Entry>\n        <KeyEntry char=\"+/-\">Zoom in/out</KeyEntry>\n        <KeyEntry char=\";\">Toggle grid</KeyEntry>\n        <KeyEntry char=\"/\">Toggle flow outlines</KeyEntry>\n        <KeyEntry char=\"?\">Toggle shortcuts</KeyEntry>\n      </div>\n      <div\n        style={{\n          paddingBottom: 4,\n        }}\n      >\n        <Entry>Vimkeys</Entry>\n        <KeyEntry char=\"hjkl\">Alternative to arrows</KeyEntry>\n      </div>\n      <div\n        style={{\n          paddingBottom: 4,\n        }}\n      >\n        <Entry>About</Entry>\n        <KeyEntry char=\"a\">Show about</KeyEntry>\n      </div>\n    </div>\n  );\n}\n\nexport default Shortcuts;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { render } from \"react-dom\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport {\n  aPadding,\n  sRenderSize,\n  aMode,\n  aCell,\n  aZoom,\n  sGrid,\n  sVisibleCursor,\n  sAddFlow,\n  aButtonSize,\n  aCursorColor,\n  sSetDragResizeStart,\n  sDragResize,\n  aCanvas,\n  sSetCornerResizeStart,\n} from \"./State\";\n\nfunction FlowControl() {\n  const [mode, setMode] = useRecoilState(aMode);\n  // might regret this renaming\n  const visibleCursor = useRecoilValue(sVisibleCursor);\n  const padding = useRecoilValue(aPadding);\n  const renderSize = useRecoilValue(sRenderSize);\n  const dragResize = useSetRecoilState(sDragResize);\n  const addFlow = useSetRecoilState(sAddFlow);\n  const buttonSize = useRecoilValue(aButtonSize);\n  const cursorColor = useRecoilValue(aCursorColor);\n  const canvas = useRecoilValue(aCanvas);\n  const setCornerResizeStart = useSetRecoilState(sSetCornerResizeStart);\n  const resizeRef = useRef(false);\n\n  const getXY = (e) => {\n    let bounds = canvas.getBoundingClientRect();\n    let x = e.clientX - bounds.left;\n    let y = e.clientY - bounds.top;\n    return [x, y];\n  };\n\n  const setFlow = (dir) => {\n    addFlow(dir);\n    setMode(\"move\");\n  };\n\n  let [x, y, w, h] = visibleCursor;\n\n  const size = buttonSize;\n\n  let rsize = buttonSize;\n  let rdisplay = padding;\n\n  function startResize(pinCorner, e) {\n    resizeRef.current = true;\n    setCornerResizeStart({ pinCorner });\n    let position = getXY(e);\n    dragResize({ pixel: position });\n    setMode(\"resize\");\n    e.target.setPointerCapture(e.pointerId);\n  }\n  function resize(e) {\n    if (resizeRef.current) {\n      let position = getXY(e);\n      dragResize({ pixel: position });\n    }\n  }\n  function endResize(e) {\n    if (resizeRef.current) {\n      let position = getXY(e);\n      dragResize({ pixel: position });\n      resizeRef.current = false;\n      setMode(\"flow\");\n      e.target.releasePointerCapture(e.pointerId);\n    }\n  }\n\n  let cx = x + w / 2;\n  let cy = y + h / 2;\n\n  // keep arrows in bounds\n  let fx = cx;\n  let fy = cy;\n  let fbw = Math.max(w, buttonSize * 3);\n  let fbh = Math.max(h, buttonSize * 3);\n  let afx = fx - fbw / 2;\n  let afy = fy - fbh / 2;\n  if (afx < padding + buttonSize / 2) {\n    afx = buttonSize / 2 + padding;\n    if (fbw > buttonSize * 3) {\n      fbw -= buttonSize / 2;\n    }\n  }\n  if (afy < padding + buttonSize / 2) {\n    afy = buttonSize / 2 + padding;\n    if (fbh > buttonSize * 3) {\n      fbh -= buttonSize / 2;\n    }\n  }\n  if (afx + fbw > renderSize[0] - padding * 2) {\n    if (fbw > buttonSize * 3) {\n      fbw -= buttonSize / 2;\n    } else {\n      afx -= buttonSize + padding * 2;\n    }\n  }\n  if (afy + fbh > renderSize[1] - padding * 2) {\n    if (fbh > buttonSize * 3) {\n      fbh -= buttonSize / 2;\n    } else {\n      afy -= buttonSize + padding * 2;\n    }\n  }\n\n  let roff = rsize - 2;\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: renderSize[0],\n        height: renderSize[1],\n        overflow: \"hidden\",\n      }}\n    >\n      <React.Fragment>\n        <div\n          style={{\n            position: \"absolute\",\n            left: cx - w / 2,\n            top: cy - h / 2,\n            width: w,\n            height: h,\n            fontSize: size > 40 ? 20 : 15,\n            lineHeight: buttonSize + \"px\",\n            textAlign: \"center\",\n            userSelect: \"none\",\n          }}\n        >\n          <div\n            className=\"stopClick\"\n            onPointerDown={startResize.bind(null, \"bottomRight\")}\n            onPointerMove={resize}\n            onPointerUp={endResize}\n            style={{\n              position: \"absolute\",\n              left: -roff,\n              top: -roff,\n              width: rsize,\n              height: rsize,\n              cursor: \"nwse-resize\",\n            }}\n          >\n            <div\n              style={{\n                position: \"absolute\",\n                right: 0,\n                bottom: 0,\n                width: rdisplay,\n                height: rdisplay,\n                pointerEvents: \"none\",\n                background: mode === \"resize\" ? cursorColor : \"none\",\n                border: `solid 2px ${cursorColor}`,\n              }}\n            ></div>\n          </div>\n          <div\n            className=\"stopClick\"\n            onPointerDown={startResize.bind(null, \"bottomLeft\")}\n            onPointerMove={resize}\n            onPointerUp={endResize}\n            style={{\n              position: \"absolute\",\n              right: -roff,\n              top: -roff,\n              width: rsize,\n              height: rsize,\n              cursor: \"nesw-resize\",\n            }}\n          >\n            <div\n              style={{\n                position: \"absolute\",\n                left: 0,\n                bottom: 0,\n                width: rdisplay,\n                height: rdisplay,\n                pointerEvents: \"none\",\n                background: mode === \"resize\" ? cursorColor : \"none\",\n                border: `solid 2px ${cursorColor}`,\n              }}\n            ></div>\n          </div>\n          <div\n            className=\"stopClick\"\n            onPointerDown={startResize.bind(null, \"topRight\")}\n            onPointerMove={resize}\n            onPointerUp={endResize}\n            style={{\n              position: \"absolute\",\n              left: -roff,\n              bottom: -roff,\n              width: rsize,\n              height: rsize,\n              cursor: \"nesw-resize\",\n            }}\n          >\n            <div\n              style={{\n                position: \"absolute\",\n                right: 0,\n                top: 0,\n                width: rdisplay,\n                height: rdisplay,\n                pointerEvents: \"none\",\n                background: mode === \"resize\" ? cursorColor : \"none\",\n                border: `solid 2px ${cursorColor}`,\n              }}\n            ></div>\n          </div>\n          <div\n            className=\"stopClick hover\"\n            onPointerDown={startResize.bind(null, \"topLeft\")}\n            onPointerMove={resize}\n            onPointerUp={endResize}\n            style={{\n              position: \"absolute\",\n              right: -roff - 1,\n              bottom: -roff - 1,\n              width: rsize,\n              height: rsize,\n              cursor: \"nwse-resize\",\n            }}\n          >\n            <div\n              style={{\n                position: \"absolute\",\n                left: 0,\n                top: 0,\n                width: rdisplay,\n                height: rdisplay,\n                pointerEvents: \"none\",\n                background: mode === \"resize\" ? cursorColor : \"none\",\n                border: `solid 2px ${cursorColor}`,\n              }}\n            ></div>\n          </div>\n        </div>\n        {mode === \"flow\" ? (\n          <div\n            style={{\n              position: \"absolute\",\n              left: afx,\n              top: afy,\n              width: fbw,\n              height: fbh,\n              fontSize: size > 40 ? 20 : 15,\n              lineHeight: buttonSize + \"px\",\n              textAlign: \"center\",\n              userSelect: \"none\",\n            }}\n          >\n            <div\n              className=\"stopClick hover\"\n              onPointerDown={() => setMode(\"resize\")}\n              style={{\n                position: \"absolute\",\n                top: `calc(50% - ${buttonSize / 2}px)`,\n                left: `calc(50% - ${buttonSize / 2}px)`,\n                width: buttonSize,\n                height: buttonSize,\n                background: cursorColor,\n                cursor: \"pointer\",\n              }}\n            >\n              &times;\n            </div>\n            <div\n              className=\"stopClick hoverParent\"\n              onPointerDown={() => setFlow(\"n\")}\n              style={{\n                position: \"absolute\",\n                top: -buttonSize / 2,\n                left: `calc(50% - ${buttonSize / 2}px)`,\n                width: buttonSize,\n                height: buttonSize * 1.25,\n                cursor: \"pointer\",\n              }}\n            >\n              <div\n                className=\"hoverChild\"\n                style={{\n                  position: \"absolute\",\n                  left: 0,\n                  top: 0,\n                  width: buttonSize,\n                  height: buttonSize,\n                  background: cursorColor,\n                  cursor: \"pointer\",\n                  pointerEvents: \"none\",\n                }}\n              >\n                ↑\n              </div>\n            </div>\n            <div\n              className=\"stopClick hoverParent\"\n              onPointerDown={() => setFlow(\"s\")}\n              style={{\n                position: \"absolute\",\n                bottom: -buttonSize / 2,\n                left: `calc(50% - ${buttonSize / 2}px)`,\n                width: buttonSize,\n                height: buttonSize * 1.25,\n                cursor: \"pointer\",\n              }}\n            >\n              <div\n                className=\"hoverChild\"\n                style={{\n                  position: \"absolute\",\n                  left: 0,\n                  bottom: 0,\n                  width: buttonSize,\n                  height: buttonSize,\n                  background: cursorColor,\n                  cursor: \"pointer\",\n                  pointerEvents: \"none\",\n                }}\n              >\n                ↓\n              </div>\n            </div>\n            <div\n              className=\"stopClick hoverParent\"\n              onPointerDown={() => setFlow(\"w\")}\n              style={{\n                position: \"absolute\",\n                left: -buttonSize / 2,\n                top: `calc(50% - ${buttonSize / 2}px)`,\n                width: buttonSize * 1.25,\n                height: buttonSize,\n                cursor: \"pointer\",\n              }}\n            >\n              <div\n                className=\"hoverChild\"\n                style={{\n                  position: \"absolute\",\n                  left: 0,\n                  top: 0,\n                  width: buttonSize,\n                  height: buttonSize,\n                  background: cursorColor,\n                  cursor: \"pointer\",\n                  pointerEvents: \"none\",\n                }}\n              >\n                ←\n              </div>\n            </div>\n            <div\n              className=\"stopClick hoverParent\"\n              onPointerDown={() => setFlow(\"e\")}\n              style={{\n                position: \"absolute\",\n                right: -buttonSize / 2,\n                top: `calc(50% - ${buttonSize / 2}px)`,\n                width: buttonSize * 1.25,\n                height: buttonSize,\n                cursor: \"pointer\",\n              }}\n            >\n              <div\n                className=\"hoverChild\"\n                style={{\n                  position: \"absolute\",\n                  right: 0,\n                  top: 0,\n                  width: buttonSize,\n                  height: buttonSize,\n                  background: cursorColor,\n                  cursor: \"pointer\",\n                  pointerEvents: \"none\",\n                }}\n              >\n                →\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </React.Fragment>\n    </div>\n  );\n}\n\nexport default FlowControl;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  RecoilRoot,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n} from \"recoil\";\nimport {\n  aWindowSize,\n  sRenderSize,\n  aButtonSize,\n  sShortcutPadding,\n} from \"./State\";\n\nfunction Pan() {\n  const size = useRecoilValue(aWindowSize);\n  const renderSize = useRecoilValue(sRenderSize);\n  const buttonSize = useRecoilValue(aButtonSize);\n  const panRef = useRef(null);\n  const positionRef = useRef([0, 0]);\n  const downRef = useRef(false);\n  const shortcutPadding = useRecoilValue(sShortcutPadding);\n\n  const barHeight = buttonSize + 2;\n  const availableHeight = size[1] - barHeight * 2;\n\n  useEffect(() => {\n    const panEl = panRef.current;\n\n    const panCanvas = (diff) => {\n      panEl.parentElement.parentElement.scrollBy(...diff);\n    };\n\n    const pointerDown = (e) => {\n      e.stopPropagation();\n      positionRef.current = [e.clientX, e.clientY];\n      downRef.current = true;\n      panEl.setPointerCapture(e.pointerId);\n    };\n    const pointerMove = (e) => {\n      e.stopPropagation();\n      if (downRef.current) {\n        let position = [e.clientX, e.clientY];\n        let diff = [\n          (position[0] - positionRef.current[0]) * 4,\n          (position[1] - positionRef.current[1]) * 4,\n        ];\n        panCanvas(diff);\n        positionRef.current = position;\n      }\n    };\n    const pointerUp = (e) => {\n      e.stopPropagation();\n      downRef.current = false;\n      panEl.releasePointerCapture(e.pointerId);\n    };\n\n    panEl.addEventListener(\"pointerdown\", pointerDown);\n    panEl.addEventListener(\"pointermove\", pointerMove);\n    panEl.addEventListener(\"pointerup\", pointerUp);\n    return () => {\n      panEl.removeEventListener(\"pointerdown\", pointerDown);\n      panEl.removeEventListener(\"pointermove\", pointerMove);\n      panEl.removeEventListener(\"pointerup\", pointerUp);\n    };\n  }, []);\n\n  let buttSize = 48;\n  let showButton =\n    renderSize[1] > availableHeight ||\n    renderSize[0] > size[0] - shortcutPadding;\n  return (\n    <div\n      ref={panRef}\n      style={{\n        position: \"fixed\",\n        left: `calc(50% - ${shortcutPadding / 2}px)`,\n        top: \"50%\",\n        marginTop: -buttSize / 2,\n        marginLeft: -buttSize / 2,\n        width: buttSize,\n        height: buttSize,\n        border: \"solid 8px rgba(255,255,255,0.5)\",\n        background: \"rgba(0,0,0,0.6)\",\n        zIndex: 999,\n        borderRadius: \"100%\",\n        touchAction: \"none\",\n        display: showButton ? \"block\" : \"none\",\n        cursor: \"grab\",\n        userSelect: \"none\",\n      }}\n    ></div>\n  );\n}\n\nexport default Pan;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  RecoilRoot,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n} from \"recoil\";\nimport {\n  aWindowSize,\n  sSetWindowSize,\n  aCanvas,\n  aImage,\n  aPadding,\n  sRenderSize,\n  aMode,\n  aCell,\n  aCursor,\n  aZoom,\n  sGrid,\n  sImageBounds,\n  sVisibleCursor,\n  sCursorOverlap,\n  aFlows,\n  aFlow,\n  sAddFlow,\n  aShowGrid,\n  aShowFlow,\n  aButtonSize,\n  aCursorColor,\n  aShowGridMenu,\n  sShortcutPadding,\n  aShowShortcuts,\n} from \"./State\";\nimport Keyboard from \"./Keyboard\";\nimport Pointer from \"./Pointer\";\nimport Scene from \"./Scene\";\nimport MenuBar from \"./Menu\";\nimport StatusBar from \"./Status\";\nimport Shortcuts from \"./Shortcuts\";\nimport FlowControl from \"./FlowControl\";\nimport Pan from \"./Pan\";\nimport { loadImage } from \"./Utils\";\n\nfunction Wrapper() {\n  return (\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  );\n}\n\nfunction App() {\n  const size = useRecoilValue(aWindowSize);\n  const setWindowSize = useSetRecoilState(sSetWindowSize);\n  const setShowShortcuts = useSetRecoilState(aShowShortcuts);\n\n  useEffect(() => {\n    setWindowSize();\n    if (window.innerWidth > 1200) setShowShortcuts(true);\n    window.addEventListener(\"resize\", setWindowSize);\n    return () => {\n      window.removeEventListener(\"resize\", setWindowSize);\n    };\n  }, []);\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100vh\",\n        touchAction: \"none\",\n      }}\n    >\n      <input type=\"file\" id=\"fileInput\" style={{ display: \"none\" }} />\n      {size[0] !== null ? <Body /> : null}\n    </div>\n  );\n}\n\nfunction Body() {\n  // guarantee access to size\n  return (\n    <div id=\"scrollContainer\">\n      <MenuBar />\n      <Canvas />\n      <StatusBar />\n      <Shortcuts />\n    </div>\n  );\n}\n\nfunction Canvas() {\n  const renderRef = useRef(null);\n  const shortcutPadding = useRecoilValue(sShortcutPadding);\n  const [canvas, setCanvas] = useRecoilState(aCanvas);\n  useEffect(() => {\n    setCanvas(renderRef.current);\n  }, []);\n\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        flexGrow: 1,\n        overflow: \"auto\",\n        display: \"flex\",\n        paddingRight: shortcutPadding,\n        cursor: \"crosshair\",\n        touchAction: \"none\",\n      }}\n    >\n      <div style={{ position: \"relative\", margin: \"auto\" }}>\n        <canvas id=\"render\" ref={renderRef}>\n          {canvas !== null ? <CanvasBody /> : null}\n        </canvas>\n        <Pan />\n        <FlowControl />\n      </div>\n      <Shadow />\n    </div>\n  );\n}\n\nfunction Shadow() {\n  const cell = useRecoilValue(aCell);\n  const grid = useRecoilValue(sGrid);\n  const padding = useRecoilValue(aPadding);\n  const zoom = useRecoilValue(aZoom);\n  const windowSize = useRecoilValue(aWindowSize);\n  const image = useRecoilValue(aImage);\n  const visibleCursor = useRecoilValue(sVisibleCursor);\n\n  useEffect(() => {\n    Scene.visibleCursor = visibleCursor;\n    Scene.zoom = zoom;\n    Scene.padding = padding;\n    Scene.windowSize = windowSize;\n    Scene.image = image;\n  }, [padding, grid, cell, visibleCursor, zoom, windowSize, image]);\n\n  return null;\n}\n\nfunction CanvasBody() {\n  // guarantee canvas access\n  return (\n    <>\n      <Render />\n      <Keyboard />\n      <Pointer />\n    </>\n  );\n}\n\nconst compose = ({ canvas, layers }) => {\n  const c = canvas;\n  const cx = canvas.getContext(\"2d\");\n  cx.clearRect(0, 0, c.width, c.height);\n  cx.drawImage(\n    layers.imageLayer,\n    0,\n    0,\n    Scene.image.width,\n    Scene.image.height,\n    Scene.padding,\n    Scene.padding,\n    c.width - Scene.padding * 2,\n    c.height - Scene.padding * 2\n  );\n  cx.drawImage(\n    layers.flowsLayer,\n    0,\n    0,\n    c.width,\n    c.height,\n    0,\n    0,\n    c.width,\n    c.height\n  );\n  cx.globalAlpha = 0.3;\n  cx.drawImage(\n    layers.gridLayer,\n    0,\n    0,\n    c.width,\n    c.height,\n    0,\n    0,\n    c.width,\n    c.height\n  );\n  cx.globalAlpha = 1;\n  cx.drawImage(\n    layers.cursorLayer,\n    0,\n    0,\n    c.width,\n    c.height,\n    0,\n    0,\n    c.width,\n    c.height\n  );\n};\n\nfunction Render() {\n  const canvas = useRecoilValue(aCanvas);\n  const [image, setImage] = useRecoilState(aImage);\n  const renderSize = useRecoilValue(sRenderSize);\n  const buttonSize = useRecoilValue(aButtonSize);\n  const setZoom = useSetRecoilState(aZoom);\n  const layersRef = useRef({\n    imageLayer: new OffscreenCanvas(10, 10),\n    flowsLayer: new OffscreenCanvas(10, 10),\n    gridLayer: new OffscreenCanvas(10, 10),\n    cursorLayer: new OffscreenCanvas(10, 10),\n    scratchLayer: new OffscreenCanvas(10, 10),\n  });\n  const flowRef = useRef(null);\n  const flow = useRecoilValue(aFlow);\n\n  useEffect(() => {\n    // init\n    async function init() {\n      let image = await loadImage(process.env.PUBLIC_URL + \"/images/iron.jpg\");\n      setImage(image);\n      Scene.image = image;\n    }\n    init();\n\n    Scene.layersRef = layersRef;\n  }, []);\n\n  function runFlow() {\n    if (flow) {\n      if (flowRef.current !== null) clearInterval(flowRef.current);\n      flowRef.current = setInterval(() => {\n        const im = layersRef.current.imageLayer;\n        const imx = im.getContext(\"2d\");\n\n        const scratchLayer = layersRef.current.scratchLayer;\n        const cx = scratchLayer.getContext(\"2d\");\n\n        for (let i = 0; i < Scene.flows.length; i++) {\n          const flowbox = Scene.flows[i];\n          let dir = flowbox.dir;\n          let [x, y, w, h] = flowbox.cursor;\n          scratchLayer.width = w;\n          scratchLayer.height = h;\n          if (dir === \"e\") {\n            cx.drawImage(im, x, y, w - 1, h, 1, 0, w - 1, h);\n            cx.drawImage(im, x + w - 1, y, 1, h, 0, 0, 1, h);\n          } else if (dir === \"w\") {\n            cx.drawImage(im, x + 1, y, w - 1, h, 0, 0, w - 1, h);\n            cx.drawImage(im, x, y, 1, h, w - 1, 0, 1, h);\n          } else if (dir === \"s\") {\n            cx.drawImage(im, x, y, w, h - 1, 0, 1, w, h - 1);\n            cx.drawImage(im, x, y + h - 1, w, 1, 0, 0, w, 1);\n          } else if (dir === \"n\") {\n            cx.drawImage(im, x, y + 1, w, h - 1, 0, 0, w, h - 1);\n            cx.drawImage(im, x, y, w, 1, 0, h - 1, w, 1);\n          }\n          imx.drawImage(scratchLayer, 0, 0, w, h, x, y, w, h);\n        }\n        compose({ canvas, layers: layersRef.current });\n      }, 20);\n    } else {\n      clearInterval(flowRef.current);\n    }\n  }\n\n  useEffect(() => {\n    if (image.src !== \"\") {\n      runFlow();\n    }\n  }, [flow, image]);\n\n  useEffect(() => {\n    if (image.src !== \"\") {\n      let [w, h] = Scene.windowSize;\n      // add border and status bar extra\n      h -= buttonSize * 2 + 2 + 6;\n      let sizeW = image.width + Scene.padding * 2;\n      let sizeH = image.height + Scene.padding * 2;\n      let ratio = null;\n      let imageRatio = sizeW / sizeH;\n      let windowRatio = w / h;\n      if (imageRatio > windowRatio) {\n        ratio = (w - Scene.padding * 2) / image.width;\n        setZoom(ratio);\n      } else {\n        ratio = (h - Scene.padding * 2) / image.height;\n      }\n      setZoom(ratio);\n    }\n  }, [image, buttonSize]);\n\n  useEffect(() => {\n    canvas.width = renderSize[0];\n    canvas.height = renderSize[1];\n    compose({ canvas, layers: layersRef.current });\n  }, [renderSize]);\n\n  return (\n    <>\n      <ImageLayer layersRef={layersRef} />\n      <GridLayer layersRef={layersRef} />\n      <CursorLayer layersRef={layersRef} />\n      <FlowsLayer layersRef={layersRef} />\n    </>\n  );\n}\n\nfunction ImageLayer({ layersRef }) {\n  const canvas = useRecoilValue(aCanvas);\n  const image = useRecoilValue(aImage);\n  const layers = layersRef.current;\n\n  useEffect(() => {\n    if (image) {\n      const c = layers.imageLayer;\n      c.width = image.width;\n      c.height = image.height;\n      const cx = c.getContext(\"2d\");\n      cx.clearRect(0, 0, c.width, c.height);\n      // image should always be full size\n      // compose draws it at proper zoom level\n      cx.drawImage(\n        image,\n        0,\n        0,\n        image.width,\n        image.height,\n        0,\n        0,\n        image.width,\n        image.height\n      );\n      compose({ canvas, layers });\n    }\n  }, [image]);\n\n  return null;\n}\n\nfunction FlowsLayer({ layersRef }) {\n  const canvas = useRecoilValue(aCanvas);\n  const image = useRecoilValue(aImage);\n  const layers = layersRef.current;\n  const padding = useRecoilValue(aPadding);\n  const renderSize = useRecoilValue(sRenderSize);\n  const zoom = useRecoilValue(aZoom);\n  const flows = useRecoilValue(aFlows);\n  const showFlow = useRecoilValue(aShowFlow);\n\n  useEffect(() => {\n    if (image) {\n      const c = layers.flowsLayer;\n      c.width = renderSize[0];\n      c.height = renderSize[1];\n      const cx = c.getContext(\"2d\");\n      cx.clearRect(0, 0, c.width, c.height);\n      if (showFlow) {\n        cx.strokeStyle = \"white\";\n        cx.lineWidth = 2;\n        for (let i = 0; i < flows.length; i++) {\n          let flow = flows[i];\n          let [x, y, w, h] = flow.cursor;\n          cx.strokeRect(\n            x * zoom + padding,\n            y * zoom + padding,\n            w * zoom,\n            h * zoom\n          );\n        }\n      }\n      compose({ canvas, layers });\n    }\n  }, [renderSize, image, zoom, flows, showFlow]);\n\n  useEffect(() => {\n    Scene.flows = flows;\n  }, [flows]);\n\n  return null;\n}\n\nfunction GridLayer({ layersRef }) {\n  const canvas = useRecoilValue(aCanvas);\n  const image = useRecoilValue(aImage);\n  const layers = layersRef.current;\n  const padding = useRecoilValue(aPadding);\n  const renderSize = useRecoilValue(sRenderSize);\n  const zoom = useRecoilValue(aZoom);\n  const cell = useRecoilValue(aCell);\n  const grid = useRecoilValue(sGrid);\n  const imageBounds = useRecoilValue(sImageBounds);\n  const showGrid = useRecoilValue(aShowGrid);\n  const showGridMenu = useRecoilValue(aShowGridMenu);\n\n  useEffect(() => {\n    const p = (v) => v + padding;\n    const c = layers.gridLayer;\n    c.width = renderSize[0];\n    c.height = renderSize[1];\n    const cx = c.getContext(\"2d\");\n    cx.clearRect(0, 0, c.width, c.height);\n    if (showGrid || showGridMenu) {\n      cx.strokeStyle = \"#ccc\";\n      cx.lineWidth = 2;\n      for (let c = 0; c < grid.cols; c++) {\n        let x = c * cell[2] + grid.xoff;\n        cx.beginPath();\n        cx.moveTo(p(x * zoom), p(imageBounds.y1 * zoom));\n        cx.lineTo(p(x * zoom), p(imageBounds.y2 * zoom));\n        cx.stroke();\n      }\n      for (let r = 0; r < grid.rows; r++) {\n        let y = r * cell[3] + grid.yoff;\n        cx.beginPath();\n        cx.moveTo(p(imageBounds.x1 * zoom), p(y * zoom));\n        cx.lineTo(p(imageBounds.x2 * zoom), p(y * zoom));\n        cx.stroke();\n      }\n    }\n    compose({ canvas, layers });\n  }, [cell, renderSize, zoom, showGrid, showGridMenu]);\n\n  return null;\n}\n\nfunction CursorLayer({ layersRef }) {\n  const canvas = useRecoilValue(aCanvas);\n  const layers = layersRef.current;\n  const padding = useRecoilValue(aPadding);\n  const renderSize = useRecoilValue(sRenderSize);\n  const zoom = useRecoilValue(aZoom);\n  const cell = useRecoilValue(aCell);\n  const grid = useRecoilValue(sGrid);\n  const cursor = useRecoilValue(aCursor);\n  const visibleCursor = useRecoilValue(sVisibleCursor);\n  const cursorOverlap = useRecoilValue(sCursorOverlap);\n  const mode = useRecoilValue(aMode);\n  const cursorColor = useRecoilValue(aCursorColor);\n\n  useEffect(() => {\n    const c = layers.cursorLayer;\n    c.width = renderSize[0];\n    c.height = renderSize[1];\n    const cx = c.getContext(\"2d\");\n    cx.clearRect(0, 0, c.width, c.height);\n    let [x, y, w, h] = visibleCursor;\n    cx.strokeStyle = cursorColor;\n    cx.lineWidth = 2;\n    cx.strokeRect(x, y, w, h);\n\n    // draw oob indicator\n    let [ol, ot, or, ob] = cursorOverlap;\n    cx.lineWidth = 4;\n    if (ol) {\n      cx.beginPath();\n      cx.moveTo(x, y);\n      cx.lineTo(x, y + h);\n      cx.stroke();\n    }\n    if (ot) {\n      cx.beginPath();\n      cx.moveTo(x, y);\n      cx.lineTo(x + w, y);\n      cx.stroke();\n    }\n    if (or) {\n      cx.beginPath();\n      cx.moveTo(x + w, y);\n      cx.lineTo(x + w, y + h);\n      cx.stroke();\n    }\n    if (ob) {\n      cx.beginPath();\n      cx.moveTo(x, y + h);\n      cx.lineTo(x + w, y + h);\n      cx.stroke();\n    }\n\n    // if (mode === \"resize\") {\n    //   let size = 14;\n    //   cx.fillStyle = cursorColor;\n    //   cx.fillRect(x - size / 2, y - size / 2, size, size);\n    //   cx.fillRect(x + w - size / 2, y + h - size / 2, size, size);\n    //   cx.fillRect(x - size / 2, y + h - size / 2, size, size);\n    //   cx.fillRect(x + w - size / 2, y - size / 2, size, size);\n    // }\n\n    compose({ canvas, layers });\n  }, [cell, cursor, renderSize, zoom, mode, cursorColor]);\n\n  return null;\n}\n\nexport default Wrapper;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./font.css\";\nimport \"./index.css\";\nimport Wrapper from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Wrapper />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}